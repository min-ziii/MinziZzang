spring:
  application:
    name: boot-oauth2

  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@localhost:1521/xe
    username: springboot
    password: java1234

  thymeleaf:
    cache: false

  # JPA 설정
  jpa:
    database: oracle
    generate-ddl: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true #자동 생성된 SQL을 로그에 출력해주세요
    properties:
      hibernate:
        format_sql: true #SQL을 이쁘게 보여주세요

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: awzc9RFCMjMaHPQVJaiY
            client-secret: 4QIqvfTk0s
            redirect-uri: http://localhost:8090/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name,email
          google:
            client-name: google
            client-id: 281387590670-kmdo11k1i038vcf2kgv6ql0tt4f4n8gl.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8090/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope: profile,email
        provider:
           naver:
             authorization-uri: http://nid.naver.com/oauth2.0/authorize
             token-uri: https://nid.naver.com/oauth2.0/token
             user-info-uri: https://openapi.naver.com/v1/nid/me               
             user-name-attribute: response

server:
  port: 8090
